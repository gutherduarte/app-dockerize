version: "3.3"
services:
  loadbalancer:
    build: ./loadbalancer-dockerize/
    ports:
      - "9000:80"
    depends_on:
      - web_production
      - web_production_2
      - web_production_buy
  web_production:
    build: ./frontend-dockerize/
    ports:
      - "9001:80"
    depends_on:
      - api_production
  web_production_2:
    build: ./frontend-dockerize/
    ports:
      - "9002:80"
    depends_on:
      - api_production_2
  web_production_buy:
    build: ./frontend-dockerize/
    ports:
      - "9003:80"
    depends_on:
      - api_production_buy
  api_production:
    build: ./backend-dockerize/
    ports:
      - "8997:80"
    environment:
      SERVER: "sqlserver"
      PORT: 1433
      DATABASE: "AppDbContext"
      USERNAME: "sa"
      PASSWORD: "Produccion123*"
      INTEGRATED_SECURITY: "false"
      TRUST_SERVER_CERTIFICATE: "true"
    depends_on:
      - productiondb
    links:
      - "productiondb"
  api_production_2:
    build: ./backend-dockerize/
    ports:
      - "8998:80"
    environment:
      SERVER: "sqlserver"
      PORT: 1433
      DATABASE: "AppDbContext"
      USERNAME: "sa"
      PASSWORD: "Produccion123*"
      INTEGRATED_SECURITY: "false"
      TRUST_SERVER_CERTIFICATE: "true"
    depends_on:
      - productiondb
    links:
      - "productiondb"
  api_production_buy:
    build: ./backend-dockerize/
    ports:
      - "8999:80"
    environment:
      SERVER: "sqlserver"
      PORT: 1433
      DATABASE: "AppDbContext"
      USERNAME: "sa"
      PASSWORD: "Produccion123*"
      INTEGRATED_SECURITY: "false"
      TRUST_SERVER_CERTIFICATE: "true"
    depends_on:
      - productiondb
    links:
      - "productiondb"
  productiondb:
    image: "mcr.microsoft.com/mssql/server"
    user: "0:0"
    hostname: "sqlserver"
    environment:
      SA_PASSWORD: "Produccion123*"
      ACCEPT_EULA: "Y"
    volumes:
      - data:/var/opt/mssql/data
volumes:
  data:
